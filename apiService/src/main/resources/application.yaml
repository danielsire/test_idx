server:
  port: 8081

spring:
  application:
    name: api-service
  profiles.active: local
  jpa:
    properties.hibernate.temp.use_jdbc_metadata_defaults: false
  rabbitmq:
    password: guest
    port: 15672
    username: guest
    exchange: client.exchange
    queue: client.queue
    routingkey: client.routingkey
  data:
    elasticsearch:
      cluster-name: test_idx
      repositories:
        enabled: true
      properties:
        index:
          search:
            slowlog:
              threshold:
                query:
                  info: 1ms

logging:
  level:
    org:
      springframework:
        data:
          elasticsearch:
            client:
              WIRE: trace

---
spring:
  profiles: local
  datasource:
    platform: postgres
    driver: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/clients
    username: clients
    password: clients
  jpa:
    database: POSTGRESQL
    show-sql: true
    hibernate.ddl-auto: none
  rabbitmq:
    host: localhost
  data:
    elasticsearch:
      cluster-nodes: localhost:9300


---
spring:
  profiles: tests
  datasource:
    driver: org.h2.Driver
    url: jdbc:h2:mem:test;INIT=CREATE SCHEMA IF NOT EXISTS clients
    username: sa
    password:
  jpa:
    database: h2
    show-sql: true
    hibernate.ddl-auto: create
  rabbitmq:
    host: localhost

---
spring:
  profiles: docker
  datasource:
    platform: postgres
    driver: org.postgresql.Driver
    url: jdbc:postgresql://postgres:5432/clients
    username: clients
    password: clients
  jpa:
    database: POSTGRESQL
    show-sql: true
    hibernate.ddl-auto: none
  rabbitmq:
    host: rabbitmq
  data:
    elasticsearch:
      cluster-nodes: elasticsearch:9300